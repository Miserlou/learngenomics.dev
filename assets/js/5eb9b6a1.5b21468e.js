"use strict";(self.webpackChunklearngenomics_dev=self.webpackChunklearngenomics_dev||[]).push([[5822],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return p}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),u=m(n),p=o,d=u["".concat(c,".").concat(p)]||u[p]||l[p]||i;return n?r.createElement(d,a(a({ref:t},f),{},{components:n})):r.createElement(d,a({ref:t},f))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var m=2;m<i;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7604:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return l}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={},c="Genomic File Formats",m={unversionedId:"genomic-file-formats/index",id:"genomic-file-formats/index",title:"Genomic File Formats",description:"When working with genomics data for the first time, many engineers are surprised to find that genomics file types are quite simple in structure. In fact, a majority of universal file formats such as\xa0SAM/BAM,\xa0VCF,\xa0BED,\xa0GFF/GTF\xa0and many other custom formats are simply tab-delimited text files with some form of compression and/or serialization. Mastery of Unix command line tools such as\xa0grep,\xa0less,\xa0cut,\xa0join,\xa0sort,\xa0sed, and\xa0awk\xa0are essential to working effectively in this domain. We'll walk through the most common types of file formats in genomics, starting with an overview of BGZF and compression.",source:"@site/docs/04-genomic-file-formats/index.md",sourceDirName:"04-genomic-file-formats",slug:"/genomic-file-formats/",permalink:"/docs/genomic-file-formats/",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-genomic-file-formats/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Read Mapping",permalink:"/docs/next-generation-sequencing/read-mapping"},next:{title:"Compression and BGZF",permalink:"/docs/genomic-file-formats/compression-and-BGZF"}},f={},l=[],u={toc:l};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"genomic-file-formats"},"Genomic File Formats"),(0,i.kt)("p",null,"When working with genomics data for the first time, many engineers are surprised to find that genomics file types are quite simple in structure. In fact, a majority of universal file formats such as\xa0",(0,i.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/SAMv1.pdf"},"SAM/BAM"),",\xa0",(0,i.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf"},"VCF"),",\xa0",(0,i.kt)("a",{parentName:"p",href:"https://uswest.ensembl.org/info/website/upload/bed.html"},"BED"),",\xa0",(0,i.kt)("a",{parentName:"p",href:"https://uswest.ensembl.org/info/website/upload/gff.html"},"GFF/GTF"),"\xa0and many other custom formats are simply tab-delimited text files with some form of compression and/or serialization. Mastery of Unix command line tools such as\xa0grep,\xa0less,\xa0cut,\xa0join,\xa0sort,\xa0sed, and\xa0awk\xa0are essential to working effectively in this domain. We'll walk through the most common types of file formats in genomics, starting with an overview of BGZF and compression."))}p.isMDXComponent=!0}}]);