"use strict";(self.webpackChunklearngenomics_dev=self.webpackChunklearngenomics_dev||[]).push([[1888],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return f}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(a),f=i,h=d["".concat(l,".").concat(f)]||d[f]||c[f]||r;return a?n.createElement(h,o(o({ref:t},m),{},{components:a})):n.createElement(h,o({ref:t},m))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4068:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],s={title:"Genomic File Formats",track:"Engineering Ecosystem"},l=void 0,p={unversionedId:"engineering-ecosystem/genomic-file-formats",id:"engineering-ecosystem/genomic-file-formats",title:"Genomic File Formats",description:"When working with genomics data for the first time, many engineers are surprised to find that genomics file types are quite simple in structure. In fact, a majority of universal file formats such as\xa0SAM/BAM,\xa0VCF,\xa0BED,\xa0GFF/GTF\xa0and many other custom formats are simply tab-delimited text files with some form of compression. Mastery of Unix command line tools such as\xa0grep,\xa0less,\xa0cut,\xa0join,\xa0sort,\xa0sed, and\xa0awk\xa0are essential to working effectively in this domain.",source:"@site/docs/04-engineering-ecosystem/01-genomic-file-formats.md",sourceDirName:"04-engineering-ecosystem",slug:"/engineering-ecosystem/genomic-file-formats",permalink:"/docs/engineering-ecosystem/genomic-file-formats",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/04-engineering-ecosystem/01-genomic-file-formats.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Genomic File Formats",track:"Engineering Ecosystem"},sidebar:"tutorialSidebar",previous:{title:"Engineering Ecosystem",permalink:"/docs/engineering-ecosystem/"},next:{title:"Common Genomics Tools",permalink:"/docs/engineering-ecosystem/common-genomics-tools"}},m={},c=[{value:"Compression and BGZF",id:"compression-and-bgzf",level:2},{value:"Comparison with Gzip",id:"comparison-with-gzip",level:2},{value:"FASTQ Files",id:"fastq-files",level:2},{value:"BAM Files",id:"bam-files",level:2},{value:"VCF Files",id:"vcf-files",level:2}],d={toc:c};function f(e){var t=e.components,s=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When working with genomics data for the first time, many engineers are surprised to find that genomics file types are quite simple in structure. In fact, a majority of universal file formats such as\xa0",(0,r.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/SAMv1.pdf"},"SAM/BAM"),",\xa0",(0,r.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf"},"VCF"),",\xa0",(0,r.kt)("a",{parentName:"p",href:"https://uswest.ensembl.org/info/website/upload/bed.html"},"BED"),",\xa0",(0,r.kt)("a",{parentName:"p",href:"https://uswest.ensembl.org/info/website/upload/gff.html"},"GFF/GTF"),"\xa0and many other custom formats are simply tab-delimited text files with some form of compression. Mastery of Unix command line tools such as\xa0grep,\xa0less,\xa0cut,\xa0join,\xa0sort,\xa0sed, and\xa0awk\xa0are essential to working effectively in this domain."),(0,r.kt)("h2",{id:"compression-and-bgzf"},"Compression and BGZF"),(0,r.kt)("p",null,"The BGZF compression technique and associated\xa0",(0,r.kt)("a",{parentName:"p",href:"http://www.htslib.org/doc/bgzip.html"},"bgzip"),"/",(0,r.kt)("a",{parentName:"p",href:"https://www.htslib.org/doc/tabix.html"},"tabix"),'\xa0tools were developed as general purpose utilities to enable random access lookup in compressed tab-delimited text files. By default, the\xa0gzip\xa0compression algorithm creates a single stream of data---accessing information in the middle of that compressed stream requires decompressing the stream from the beginning. Genomic files tend to be substantial in size, so decompressing an entire file to retrieve information is a waste of time and resources. The BGZF compression technique solves this problem by creating multiple gzip streams as contiguous "blocks" and storing the offsets to each block in an associated\xa0',(0,r.kt)("strong",{parentName:"p"},"index file"),". In this case, you can retrieve a subset of information from the file by seeking past all of the irrelevant BGZF blocks (avoiding the associated computational overhead) and only decompressing the block that contains the information you want."),(0,r.kt)("p",null,"Consider a single, bgzipped BAM file with the name\xa0Sample.bam. This file will typically be accompanied by an index called\xa0Sample.bam.bai, which contains offsets to the BGZF blocks. These two files are often treated as a pair."),(0,r.kt)("p",null,'For more information, see "The BGZF compression format" section in\xa0',(0,r.kt)("a",{parentName:"p",href:"http://samtools.github.io/hts-specs/SAMv1.pdf"},"the SAM file specification"),"."),(0,r.kt)("h2",{id:"comparison-with-gzip"},"Comparison with Gzip"),(0,r.kt)("p",null,"Below is a simple comparison of\xa0gzip\xa0versus\xa0bgzip\xa0to illustrate the trade-off. Note that while\xa0gzip\xa0achieves a slight edge in compression ratio, the\xa0bgzip/tabix\xa0pair is vastly superior in lookup time. This non-linear trade-off between compression and random-access speed is why BGZF is pervasive in the field of computational genomics."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(1535).Z,width:"1500",height:"620"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'GENCODE_GTF="ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.chr_patch_hapl_scaff.annotation.gtf.gz"\n\ncurl "$GENCODE_GTF" \\                        # Download GTF\n  | gunzip \\                                 # Decompress\n  | grep -v "^#" \\                           # Remove header lines\n  | sort -k1,1 -k4,4n > gencode.v32.all.gtf  # Sort by chromosome name then genomic start lcocation (numerically)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gzip -c gencode.v32.all.gtf > gencode.v32.all.gtf.gzipped\nbgzip -c gencode.v32.all.gtf > gencode.v32.all.gtf.bgzipped\n\nls -lah\n# Permissions Size User    Date Modified Name\n# .rw-r--r--  1.4G cmcleod  8 May 23:31  gencode.v32.all.gtf\n# .rw-r--r--   61M cmcleod  8 May 23:32  gencode.v32.all.gtf.bgzipped\n# .rw-r--r--   48M cmcleod  8 May 23:32  gencode.v32.all.gtf.gzipped\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tabix -p gff gencode.v32.all.gtf.gzipped\n# [tabix] was bgzip used to compress this file? gencode.v32.all.gtf.gzipped\n\ntabix -p gff gencode.v32.all.gtf.bgzipped\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'time (zgrep "gene_name=NOTCH1" gencode.v32.all.gtf.gzipped &> /dev/null)\n\n# ( zgrep "gene_name=NOTCH1" gencode.v32.all.gtf.gzipped &> /dev/null; )  20.60s user 0.05s system 99% cpu 20.693 total\n\ntime (tabix gencode.v32.all.gtf.bgzipped chr9:136,496,070-136,545,786 &> /dev/null)\n\n# ( tabix gencode.v32.all.gtf.bgzipped chr9:136,496,070-136,545,786 &> /dev/nul)  0.01s user 0.00s system 83% cpu 0.018 total\n')),(0,r.kt)("h2",{id:"fastq-files"},"FASTQ Files"),(0,r.kt)("p",null,"For most workflows in computational genomics, the input files are in the FASTQ format.\xa0",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/FASTQ_format"},"The dedicated Wikipedia page"),"\xa0for the FASTQ file is quite good, so we recommend you take a look before starting this section. As a reminder, this guide focuses on Illumina-produced FASTQ files, though the concepts are generally applicable to most sequencers today."),(0,r.kt)("p",null,"Technically speaking, FASTQ files are not a direct product of sequencers as many have their own intermediate representation of the reads (e.g.\xa0",(0,r.kt)("a",{parentName:"p",href:"https://www.illumina.com/informatics/sequencing-data-analysis/sequence-file-formats.html"},"BCL files"),"\xa0for Illumina sequencers) that need to be translated into FASTQ files (using a tool like\xa0",(0,r.kt)("a",{parentName:"p",href:"https://support.illumina.com/sequencing/sequencing_software/bcl2fastq-conversion-software.html"},"bcl2fastq"),"). In practice, many sequencing cores do this translation step before sending the data to the computational engineers downstream."),(0,r.kt)("p",null,"A FASTQ file may come as either a single file or an inseparable pair of files for single-end or paired-end sequencing respectively. A FASTQ file contains many\xa0reads, which, as noted before, are fragments of DNA/RNA read by the sequencer. Each read in the file has the following four-line structure separated by newlines."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(7103).Z,width:"1500",height:"772"})),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Line Number")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Line Description")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"The sequence name, which on modern Illumina sequencers, this is a coordinate system dictating where the read originated from on the flow cell")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"The sequence of the DNA fragment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},'A single + delimiter character, often referred to as the "plus line"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"The associated quality scores, one per nucleotide coordinating with line 2; generally an ASCII encoded probability score of incorrectness")))),(0,r.kt)("p",null,'Random access within FASTQ files is not typical, so they are gzipped (not bgzipped) to save space. Conventionally, FASTQ file names indicate which read the files contains (e.g.\xa0Sample.fastq.gz\xa0for single-end sequencing or\xa0Sample_R1.fastq.gz\xa0and\xa0Sample_R2.fastq.gz\xa0in paired-end sequencing where\xa0_R1\xa0stands for "read one(s)" and\xa0_R2\xa0stands for "read two(s)").'),(0,r.kt)("p",null,"Note that in the case of paired-end sequencing, it is crucial that each of the FASTQ files list their reads in same order. If even one read is deleted from either file, the entire read pairing will be off, which will have disastrous results during the alignment phase. To catch common formatting errors in single-end or paired-end FASTQ files, consider using\xa0",(0,r.kt)("a",{parentName:"p",href:"https://github.com/stjude/fqlib"},"fqlib"),"\xa0(specifically, the\xa0lint\xa0subcommand)."),(0,r.kt)("p",null,"Below is an example of the first four lines of a pair of FASTQ files generated by\xa0fq generate\xa0and validated by\xa0fq lint."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"fq generate --n-records 2 Sample_R1.fastq.gz Sample_R2.fastq.gz\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gzip -dc Sample_R1.fastq.gz\n\n# @fqlib5:334:VVDJXFE:4:5:7053:1012/1\n# CCTTTTCCCGCAGTCGTCAGCAGTAAGTGTGCGACCGGTAGTTCAAAAGGGGAATATCACCCGCTATTTTGCGAATACTAGAGCCTCGGTTCACGCAAGCA\n# +\n# GFGDDB@CJCHDBDBDB@JACCIE@J@GD@FHFADAIEA@@ABBEADHBFH@CIEFBBHGCHEJHEAIHAAIHBGEH@EDGAEEC@FGEABAHE@FAI@IC\n# @fqlib5:334:VVDJXFE:7:33:2310:7985/1\n# ACGTGGCCGTCCTTTTGCCAGATATCGGTAAGAGAGTTCTAGCTAAGATAATATCAATCCGCGAATGTCAGAGGGAGTGTTTCCCTTCCGGGGAAGCAAAT\n# +\n# GDGE@DBJJCBHCGFEBHDGEI@JA@GHEHA@CCJGCGGDJGBACIBGECDDBGBHI@GBAEBBJD@@BAFBHAHEHJCBGFGCA@GJ@IAAIJDHG@IDC\n\ngzip -dc Sample_R2.fastq.gz\n\n# @fqlib5:334:VVDJXFE:4:5:7053:1012/2\n# ATGCCAATGGGAAGCTCGGGTAGTTCTTTCATCATGGTAATAAATCGACCGAACAACCGTTCAGGGCCAGATGAAAAGGGCCTGGCGTCTGGCACAGACCC\n# +\n# FGDFEHBCJFDFCFHEHFGEEADCBEF@JJD@HEGE@@AIIIDHGHADEAHA@D@DCAGBFH@HBDGICI@ICAAGJBCDDGEFJ@JBHGJFACEECJEJJ\n# @fqlib5:334:VVDJXFE:7:33:2310:7985/2\n# GCCCGTAGCAATACTCCTTGCGGGGACGATTATGGCGTTAATCTGATATCTCAAGCAGTAGTGGGGCTATACACTTGCGCCGTAGTCGAGCGGTTTGTAGT\n# +\n# DIGCJJHDCEDDDAGH@FFGHFEAB@JDA@@HH@AJJIHJCA@JFHGAHA@CCGJDF@BJ@AH@B@BH@JCCEIDCIFCED@E@D@II@HBJIADG@EFDB\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"fq lint Sample_R1.fastq.gz Sample_R2.fastq.gz\n\n# Exit code is 0, which means all went well.\n\n# Simulate a missing quality score, which would be a malformed file.\n\nzcat Sample_R2.fastq.gz | head -n 7 | gzip -c > Sample_R2.bad.fastq.gz\n\nfq lint Sample_R1.fastq.gz Sample_R2.bad.fastq.gz\n\n# Sample_R2.bad.fastq.gz:8:1: [S004] CompleteValidator: Incomplete record: quality is empty\n")),(0,r.kt)("h2",{id:"bam-files"},"BAM Files"),(0,r.kt)("p",null,"The\xa0",(0,r.kt)("strong",{parentName:"p"},"Sequence Alignment/Map"),"\xa0(or SAM) format is the most common output file format after the read alignment. Typically, these files will be encoded in a binary format, bgzipped, indexed, at which point the file is referred to as a\xa0Binary Alignment/Map Format\xa0or BAM file. Each BAM file contains a header (typically used for storing metadata) followed by millions of reads, stored as one read per line. Each read contains all of the information available in the FASTQ file (read name, sequence, associated quality score), as well as additional information added by the aligner, including where the read maps to the reference genome, whether the read was produced by PCR or optical duplication, and the quality of the alignment assigned by the mapping software."),(0,r.kt)("p",null,"Ultimately, a SAM file is a tab-delimited text file that could be piped into standard Unix tools for processing. BAM files can be treated in much the same way if passed through\xa0samtools view\xa0first. Learn more about it in the associated ",(0,r.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/SAMv1.pdf"},"documentation"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(395).Z,width:"1000",height:"959"})),(0,r.kt)("h2",{id:"vcf-files"},"VCF Files"),(0,r.kt)("p",null,"The\xa0",(0,r.kt)("strong",{parentName:"p"},"Variant Call Format"),"\xa0(or VCF) is the most common format for storing variants detected in next-generation sequencing data. Typically, these files will be bgzipped and indexed. Each VCF file contains a header (typically used for storing metadata) and a list of variants. Minimally, each variant contains information about the where the variant lives in the genome and a definition of the change caused by the variant. It also supports storing information about the cohort samples and which samples contain which variants (effectively a\xa0","[num_variants]"," X ","[num_samples]","\xa0matrix with information on every sample, variant pair.)"),(0,r.kt)("p",null,"Concretely, the minimal VCF looks like this."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"CHROM")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"POS")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"ID")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"REF")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"ALT")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"QUAL")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"FILTER")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"INFO")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chr1"),(0,r.kt)("td",{parentName:"tr",align:null},"114713908"),(0,r.kt)("td",{parentName:"tr",align:null},"rs11554290"),(0,r.kt)("td",{parentName:"tr",align:null},"T"),(0,r.kt)("td",{parentName:"tr",align:null},"A"),(0,r.kt)("td",{parentName:"tr",align:null},"."),(0,r.kt)("td",{parentName:"tr",align:null},"."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chr17"),(0,r.kt)("td",{parentName:"tr",align:null},"7683718"),(0,r.kt)("td",{parentName:"tr",align:null},"."),(0,r.kt)("td",{parentName:"tr",align:null},"C"),(0,r.kt)("td",{parentName:"tr",align:null},"CT"),(0,r.kt)("td",{parentName:"tr",align:null},"."),(0,r.kt)("td",{parentName:"tr",align:null},"."),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"These fields describe:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Variant Location."),'\xa0Typically, the chromosome, position, reference base(s), and alternative base(s) fields are used to create an "address" of the variant in the genome using the form\xa0chrom-pos-ref-alt.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Variant Identifier."),"\xa0The ID field is used to store one or more unique identifiers for the variant. Commonly, the rs numbers from\xa0",(0,r.kt)("a",{parentName:"p",href:"https://www.ncbi.nlm.nih.gov/snp/"},"dbSNP"),"\xa0are used.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Quality of the Variant."),"\xa0A measure of confidence in the called variant or lack thereof. This field follows the common practice of encoding qualities as a Phred-scaled quality score with the formula\xa0. A score of 10 means there is a 1 in 10 chance of the call being incorrect, 20 means a 1 in 100 chance of the call being incorrect, and so on. If unknown, the value should be the missing value,\xa0a period.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Filter Status."),"\xa0This denotes the status of whether the variant passed all quality filters from the caller. If the variant passes, the value will have a value of\xa0PASS. If the variant fails any filters, the value will be a semi-colon separated list of codes for the filters. If unknown, the value should be the missing value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Additional Information."),"\xa0A field which can contain an arbitrary number of key-value pairs separated by semicolons of the form\xa0/",(0,r.kt)("key",null),"=/",(0,r.kt)("value1",null),"[,/",(0,r.kt)("value2",null),"]",". While there are some reserved keys specified in the documentation, anything can be denoted here. If there is no additional information, this field is empty."))),(0,r.kt)("p",null,"As alluded to earlier, the VCF format is flexible in that it\xa0",(0,r.kt)("em",{parentName:"p"},"may"),"\xa0specify one or more samples and indicate whether the sample contains any of the variants specified in the file. A simplified version of this would be something like:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Chromosome")," ",(0,r.kt)("strong",{parentName:"p"},"Position")," ",(0,r.kt)("strong",{parentName:"p"},"ID")," ",(0,r.kt)("strong",{parentName:"p"},"REF")," ",(0,r.kt)("strong",{parentName:"p"},"ALT")," ",(0,r.kt)("strong",{parentName:"p"},"Sample1")," ",(0,r.kt)("strong",{parentName:"p"},"Sample2")," ",(0,r.kt)("strong",{parentName:"p"},"Sample3")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"chr1 114713908 rs11554290 T A YES NO NO\nchr17 7683718 . C CT NO YES YES"),(0,r.kt)("p",null,'However, in practice this is complicated by the fact that variants can have various genotypes (homozygous reference allele, homozygous alternate allele, or heterozygous) and evidence depth. For more information, see the "Genotype fields" section of the ',(0,r.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/VCFv4.2.pdf"},"VCF specification"),"."),(0,r.kt)("p",null,"Ultimately, a VCF file is just a tab-delimited text file that could be piped into standard Unix tools for processing. Learn more about it ",(0,r.kt)("a",{parentName:"p",href:"https://samtools.github.io/hts-specs/VCFv4.3.pdf"},"here"),"."))}f.isMDXComponent=!0},7103:function(e,t,a){t.Z=a.p+"assets/images/6.1-FastQ-e36a740251aef159f725a01cc9d6757c.jpg"},395:function(e,t,a){t.Z=a.p+"assets/images/6.2-BAM-2dd71d8e7b3ee35633667bf0ff8e9cd4.jpg"},1535:function(e,t,a){t.Z=a.p+"assets/images/7.1-GZIP-BGZF-5c23f2c8afaa746f11cfc9e219652321.jpg"}}]);